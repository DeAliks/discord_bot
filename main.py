import os
import discord
import asyncio
import logging
from discord.ext import commands
from dotenv import load_dotenv
import data
import datetime

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

TOKEN = os.getenv('DISCORD_TOKEN')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Intents
intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.reactions = True

bot = commands.Bot(command_prefix='!', intents=intents)

BOSS_ALERT_CHANNEL_ID = 1278955149208846356

# –ú–∞–ø–ø–∏–Ω–≥ –±–æ—Å—Å–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
boss_mapping_normal = {
    'üêû': "Anggolt",
    'üêé': "Kiaron",
    'üêó': "Grish",
    'ü¶Å': "Inferno"
}

boss_mapping_chaos = {
    'üêû': "Liantte",
    'üêé': "Seyron",
    'üêó': "Gottmol",
    'ü¶Å': "Gehenna"
}

@bot.event
async def on_ready():
    logging.info(f"–ú—ã –≤–æ—à–ª–∏ –∫–∞–∫ {bot.user}")

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    logging.info(
        f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ: {message.content} –≤ –∫–∞–Ω–∞–ª–µ {message.channel.name} –æ—Ç {message.author.display_name}")

    if message.channel.name == 'arena':
        existing_channels = [channel.name for channel in message.guild.text_channels if
                             channel.name.startswith(f'arena-{message.author.display_name}')]

        if existing_channels:
            await message.channel.send("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–π –ø–æ–¥–∫–∞–Ω–∞–ª: " + existing_channels[0])
            return

        await create_arena_channel(message)

async def create_arena_channel(message):
    logging.info("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %s", message.author.display_name)

    base_channel_name = f'arena-{message.author.display_name}'
    category = discord.utils.get(message.guild.categories, name='–ë–æ—Ç')

    new_channel_name = base_channel_name + '-1'  # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∏–º—è –∫–∞–Ω–∞–ª–∞
    logging.info("–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª: %s", new_channel_name)

    try:
        channel = await message.guild.create_text_channel(new_channel_name, category=category)
        logging.info("–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: %s", channel.name)
    except Exception as e:
        logging.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: %s", e)
        await message.channel.send("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.")
        return

    await asyncio.sleep(0.5)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    participation_message = await channel.send("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å | Choose the difficulty:\nüòá - –û–±—ã—á–Ω—ã–π | Normal \nüòà - –•–∞–æ—Å | Chaos")

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
    await safely_add_reaction(participation_message, "üòá")  # üòá emoji
    await safely_add_reaction(participation_message, "üòà")  # üòà emoji

    try:
        reaction, user = await bot.wait_for('reaction_add', timeout=300.0,
                                            check=lambda r, u: u == message.author and str(r.emoji) in ["üòá", "üòà"])
        difficulty_level = "–û–±—ã—á–Ω—ã–π" if str(reaction.emoji) == "üòá" else "–•–∞–æ—Å"
        logging.info("%s –≤—ã–±—Ä–∞–ª —Å–ª–æ–∂–Ω–æ—Å—Ç—å: %s", message.author.display_name, difficulty_level)

        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–ø–∏—Å–æ–∫ –±–æ—Å—Å–æ–≤
        if difficulty_level == "–û–±—ã—á–Ω—ã–π":
            boss_mapping = boss_mapping_normal
            bosses_description = "–í—ã–±–µ—Ä–µ—Ç–µ –±–æ—Å—Å–∞! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ä–µ–∞–∫—Ü–∏–π –Ω–∏–∂–µ:\n Choose a boss? Choose one of the reactions below:\n" \
                                 "üêû - Anggolt\nüêé - Kiaron\nüêó - Grish\nü¶Å - Inferno"
        else:
            boss_mapping = boss_mapping_chaos
            bosses_description = "–í—ã–±–µ—Ä–µ—Ç–µ –±–æ—Å—Å–∞! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ä–µ–∞–∫—Ü–∏–π –Ω–∏–∂–µ:\n Choose a boss? Choose one of the reactions below:\n" \
                                 "üêû - Liantte\nüêé - Seyron\nüêó - Gottmol\nü¶Å - Gehenna"

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–æ–Ω—ã —á–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª:
        zone_message = await channel.send("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª, –≥–¥–µ –±—ã–ª —É–±–∏—Ç –±–æ—Å—Å:\nSelect the channel where the boss was killed:\n:one: - –ö–∞–Ω–∞–ª 1 | Channel 1\n:two: - –ö–∞–Ω–∞–ª 2 | Channel 2")
        await safely_add_reaction(zone_message, "1Ô∏è‚É£")  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏
        await safely_add_reaction(zone_message, "2Ô∏è‚É£")  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏

        reaction, user = await bot.wait_for('reaction_add', timeout=300.0,
                                            check=lambda r, u: u == message.author and str(r.emoji) in ["1Ô∏è‚É£", "2Ô∏è‚É£"])
        selected_channel_number = "–ö–∞–Ω–∞–ª 1" if str(reaction.emoji) == "1Ô∏è‚É£" else "–ö–∞–Ω–∞–ª 2"
        logging.info("%s –≤—ã–±—Ä–∞–ª –∫–∞–Ω–∞–ª: %s", message.author.display_name, selected_channel_number)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Å—Å–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        await channel.send(bosses_description)

        boss_message = await channel.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ—Å—Å–∞, –¥–æ–±–∞–≤–∏–≤ —Ä–µ–∞–∫—Ü–∏—é –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é.")
        for emoji in boss_mapping.keys():
            await safely_add_reaction(boss_message, emoji)

        reaction, user = await bot.wait_for('reaction_add', timeout=300.0,
                                            check=lambda r, u: u == message.author and str(r.emoji) in boss_mapping.keys())
        boss_name = boss_mapping[str(reaction.emoji)]
        logging.info("%s –≤—ã–±—Ä–∞–ª –±–æ—Å—Å–∞: %s", message.author.display_name, boss_name)

        await channel.send("–ù–∞–ø–∏—à–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–æ–Ω—ã, –≥–¥–µ –±—ã–ª —É–±–∏—Ç –±–æ—Å—Å:\n Write the level of the zone where the boss was killed:")

        try:
            zone_message = await bot.wait_for('message', timeout=300.0,
                                              check=lambda m: m.author == message.author and m.channel == channel)
            zone = zone_message.content.strip()
            logging.info("%s –≤—ã–±—Ä–∞–ª –∑–æ–Ω—É: %s", message.author.display_name, zone)

            kill_time = datetime.datetime.now().strftime("%d.%m.%Y %H:%M")
            await data.record_boss_kill(boss_name, kill_time, zone, difficulty_level, selected_channel_number)

            await channel.send("–î–∞–Ω–Ω—ã–µ –æ —É–±–∏–π—Å—Ç–≤–µ –±–æ—Å—Å–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É.")
            await close_channel_after_delay(channel, 10)  # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥

        except asyncio.TimeoutError:
            await channel.send("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∑–æ–Ω—ã –≤–æ–≤—Ä–µ–º—è. –ö–∞–Ω–∞–ª –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç.")
            await close_channel_after_delay(channel, 10)  # –ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –≤ —Å–ª—É—á–∞–µ —Ç–∞–π–º-–∞—É—Ç–∞

    except Exception as e:
        logging.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä–µ–Ω—ã: %s", e)
        await channel.send("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä–µ–Ω—É.")
        await close_channel_after_delay(channel, 10)  # –ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏


async def safely_add_reaction(message, emoji):
    try:
        await message.add_reaction(emoji)
        await asyncio.sleep(0.2)  # –ù–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–µ–º –º–µ–∂–¥—É —Ä–µ–∞–∫—Ü–∏—è–º–∏
    except discord.HTTPException as e:
        if e.status == 429:
            retry_after = e.data.get('retry_after', 0) / 1000.0
            logging.warning(f"Rate limited! Retrying after {retry_after} seconds.")
            await asyncio.sleep(retry_after)
            await safely_add_reaction(message, emoji)


async def close_channel_after_delay(channel, delay):
    logging.info(f"–ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ {delay} —Å–µ–∫—É–Ω–¥...")
    await asyncio.sleep(delay)
    try:
        await channel.delete()
        logging.info("–ö–∞–Ω–∞–ª %s –±—ã–ª –∑–∞–∫—Ä—ã—Ç –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏", channel.name)
    except discord.NotFound:
        logging.warning("–ö–∞–Ω–∞–ª %s —É–∂–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", channel.name)
    except Exception as e:
        logging.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: %s", e)


bot.run(TOKEN)